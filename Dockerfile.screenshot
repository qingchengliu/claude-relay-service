# 使用Python 3.11 slim版本作为基础镜像
FROM python:3.11-slim

# 设置工作目录
WORKDIR /app

# 配置阿里云apt源
RUN rm -f /etc/apt/sources.list /etc/apt/sources.list.d/* \
    && echo "deb https://mirrors.aliyun.com/debian/ bookworm main non-free non-free-firmware" > /etc/apt/sources.list \
    && echo "deb https://mirrors.aliyun.com/debian-security/ bookworm-security main" >> /etc/apt/sources.list \
    && echo "deb https://mirrors.aliyun.com/debian/ bookworm-updates main non-free non-free-firmware" >> /etc/apt/sources.list \
    && apt-get clean

# 安装Chrome浏览器和中文字体依赖
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    unzip \
    curl \
    # Chrome依赖
    fonts-liberation \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libatspi2.0-0 \
    libcups2 \
    libdbus-1-3 \
    libdrm2 \
    libgbm1 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libwayland-client0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxkbcommon0 \
    libxrandr2 \
    xdg-utils \
    # emoji表情字体支持
    fonts-noto-color-emoji \
    fontconfig \
    # 清理缓存
    && rm -rf /var/lib/apt/lists/*

# 设置环境变量和语言环境
ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    LANGUAGE=C.UTF-8

# 安装Chrome浏览器 - 使用本地缓存包
COPY docker/cache/google-chrome-stable_current_amd64.deb /tmp/
COPY docker/cache/simsun.ttf /usr/share/fonts/truetype/simsun.ttf
RUN dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get update && apt-get install -f -y \
    && rm /tmp/google-chrome-stable_current_amd64.deb \
    && chmod 644 /usr/share/fonts/truetype/simsun.ttf \
    && rm -rf /var/lib/apt/lists/*

# 配置中文字体和emoji
RUN fc-cache -fv \
    && fc-list | grep -i "simsun\|emoji" | head -4

# 设置Chrome的环境变量和字体
ENV CHROME_BIN=/usr/bin/google-chrome-stable \
    CHROME_PATH=/usr/bin/google-chrome-stable

# 复制Python依赖文件
COPY requirements.txt .

# 安装Python依赖
RUN pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && \
    pip install --no-cache-dir -r requirements.txt

# 复制项目文件
COPY screenshot_scheduler.py .

# 创建日志目录
RUN mkdir -p /app/logs

# 设置时区为上海
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# 运行脚本
CMD ["python", "-u", "screenshot_scheduler.py"]